body {
  margin: 0;
}

.floatLayout
{

}

#MahDiagram
{
  background-color: blue;
}

.splash {
    text-align: center;
    margin: 10% 0 0 0;
    box-sizing: border-box;
}

.splash .message {
    font-size: 72px;
    line-height: 72px;
    text-shadow: rgba(0, 0, 0, 0.5) 0 0 15px;
    text-transform: uppercase;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.splash .fa-spinner {
    text-align: center;
    display: inline-block;
    font-size: 72px;
    margin-top: 50px;
}

.page-host {
    position: absolute;
    left: 0;
    right: 0;
    top: 50px;
    bottom: 0;
    overflow-x: hidden;
    overflow-y: auto;
}

section {
    margin: 0 20px;
}

.navbar-nav li.loader {
    margin: 12px 24px 0 6px;
}

.pictureDetail {
    max-width: 425px;
}

/* animate page transitions */
section.au-enter-active {
  -webkit-animation: fadeInRight 1s;
  animation: fadeInRight 1s;
}

/* animate flickr image entry */
.flickr-img.au-enter-active {
  -webkit-animation: bounce 1s;
  animation: bounce 1s;
}

.flickr-img > a > img {
  width: 260px;
  height: 180px;
}


/* animation definitions */
@-webkit-keyframes fadeInRight {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0)
  }
  100% {
    opacity: 1;
    -webkit-transform: none;
    transform: none
  }
}
@keyframes fadeInRight {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(100%, 0, 0);
    -ms-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0)
  }
  100% {
    opacity: 1;
    -webkit-transform: none;
    -ms-transform: none;
    transform: none
  }
}


@-webkit-keyframes bounce {
  0%, 100%, 20%, 53%, 80% {
    -webkit-transition-timing-function: cubic-bezier(0.215, .61, .355, 1);
    transition-timing-function: cubic-bezier(0.215, .61, .355, 1);
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0)
  }
  40%,
  43% {
    -webkit-transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    -webkit-transform: translate3d(0, -30px, 0);
    transform: translate3d(0, -30px, 0)
  }
  70% {
    -webkit-transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    -webkit-transform: translate3d(0, -15px, 0);
    transform: translate3d(0, -15px, 0)
  }
  90% {
    -webkit-transform: translate3d(0, -4px, 0);
    transform: translate3d(0, -4px, 0)
  }
}
@keyframes bounce {
  0%, 100%, 20%, 53%, 80% {
    -webkit-transition-timing-function: cubic-bezier(0.215, .61, .355, 1);
    transition-timing-function: cubic-bezier(0.215, .61, .355, 1);
    -webkit-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0)
  }
  40%,
  43% {
    -webkit-transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    -webkit-transform: translate3d(0, -30px, 0);
    -ms-transform: translate3d(0, -30px, 0);
    transform: translate3d(0, -30px, 0)
  }
  70% {
    -webkit-transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    transition-timing-function: cubic-bezier(0.755, .050, .855, .060);
    -webkit-transform: translate3d(0, -15px, 0);
    -ms-transform: translate3d(0, -15px, 0);
    transform: translate3d(0, -15px, 0)
  }
  90% {
    -webkit-transform: translate3d(0, -4px, 0);
    -ms-transform: translate3d(0, -4px, 0);
    transform: translate3d(0, -4px, 0)
  }
}























































/* elements */

.devs text {
  text-transform: uppercase;
  font-weight: 800;
}

.devs .body {
  fill: #ffffff;
  stroke: #00d2c6;
  stroke-width: 6px;
}

.devs .label {
  fill: #00d2c6;
  font-size: 16px;
}

.devs .port-body {
  stroke: #ffffff;
  stroke-width: 3px;
  fill: #7c68fc;
}

.devs .port-body:hover {
  opacity: 1;
  fill: #ff7e5d;
}

.devs .port-label {
  fill: #7c68fc;
}

.devs.Atomic .body {
  stroke: #ffb176;
}

.devs.Atomic .label {
  fill: #ffb176;
}

/* links */

.link .connection {
  stroke: #212135;
  stroke-width: 4px;
}

.link .marker-arrowhead, .link .marker-vertex {
  fill: #696b87;
}

.link-tools .tool-remove circle {
  fill: #ff7e5d;
}

/* highlighting */

.devs.highlighted-parent .body {
  stroke: #ff7e5d;
  transition: stroke 1s;
}

.devs.highlighted-parent .label {
  fill: #ff7e5d;
  transition: fill 1s;
  text-decoration: underline;
}

/*! JointJS v0.9.3 - JavaScript diagramming library  2015-02-03


This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */


/*
A complete list of SVG properties that can be set through CSS is here:
http://www.w3.org/TR/SVG/styling.html

Important note: Presentation attributes have a lower precedence over CSS style rules.
*/


/* .viewport is a <g> node wrapping all diagram elements in the paper */
.viewport {
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

/*
1. IE can't handle paths without the `d` attribute for bounding box calculation
2. IE can't even handle 'd' attribute as a css selector (e.g path[d]) so the following rule will
   break the links rendering.

path:not([d]) {
    display: none;
}

*/

/* .magnet is an element that can be either source or a target of a link */
/*
.magnet {
   fill: black;
   fill-opacity: 0;
   stroke: black;
   stroke-width: 15;
   stroke-opacity: 0;
   pointer-events: visibleStroke;
   cursor: crosshair;
   vector-effect: non-scaling-stroke;
}

.magnet:hover {
   stroke-opacity: .5;
}
*/

[magnet=true]:not(.element) {
  cursor: crosshair;
}
[magnet=true]:not(.element):hover {
  opacity: .7;
}

/*

Elements have CSS classes named by their types. E.g. type: basic.Rect has a CSS class "element basic Rect".
This makes it possible to easilly style elements in CSS and have generic CSS rules applying to
the whole group of elements. Each plugin can provide its own stylesheet.

*/

.element {
  /* Give the user a hint that he can drag&drop the element. */
  cursor: move;
}

.element * {
  /* The default behavior when scaling an element is not to scale the stroke in order to prevent the ugly effect of stroke with different proportions. */
  vector-effect: non-scaling-stroke;
  -moz-user-select: none;
  user-drag: none;
}


/*

connection-wrap is a <path> element of the joint.dia.Link that follows the .connection <path> of that link.
In other words, the `d` attribute of the .connection-wrap contains the same data as the `d` attribute of the
.connection <path>. The advantage of using .connection-wrap is to be able to catch pointer events
in the neighborhood of the .connection <path>. This is especially handy if the .connection <path> is
very thin.

*/

.connection-wrap {
  fill: none;
  stroke: black;
  stroke-width: 15;
  stroke-linecap: round;
  stroke-linejoin: round;
  opacity: 0;
  cursor: move;
}
.connection-wrap:hover {
  opacity: .4;
  stroke-opacity: .4;
}


.connection {
  /* stroke: black; */
  /* stroke width cannot be overriden by attribute? */
  /*   stroke-width: 1; */
  fill: none;
  stroke-linejoin: round;
}

.marker-source, .marker-target {
  /* Cannot be in CSS otherwise it could not be overruled by attributes.
     fill: black;
     stroke: black;
  */
  /* This makes the arrowheads point to the border of objects even though the transform: scale() is applied on them. */
  vector-effect: non-scaling-stroke;
}

/*

Vertex markers are `<circle>` elements that appear at connection vertex positions.

*/

/* <g> element wrapping .marker-vertex-group. */
.marker-vertices {
  opacity: 0;
  cursor: move;
}
.marker-arrowheads {
  opacity: 0;
  cursor: move;
  cursor: -webkit-grab;
  cursor: -moz-grab;
  /*   display: none;   */   /* setting `display: none` on .marker-arrowheads effectivelly switches of links reconnecting */
}
.link-tools {
  opacity: 0;
  cursor: pointer;
}
.link-tools .tool-options {
  display: none;       /* by default, we don't display link options tool */
}
.link-tools .tool-remove circle {
  fill: red;
}
.link-tools .tool-remove path {
  fill: white;
}
.link:hover .marker-vertices,
.link:hover .marker-arrowheads,
.link:hover .link-tools {
  opacity: 1;
}

/* <circle> element inside .marker-vertex-group <g> element */
.marker-vertex {
  fill: #1ABC9C;
}
.marker-vertex:hover {
  fill: #34495E;
  stroke: none;
}

.marker-arrowhead {
  fill: #1ABC9C;
}
.marker-arrowhead:hover {
  fill: #F39C12;
  stroke: none;
}

/* <circle> element used to remove a vertex */
.marker-vertex-remove {
  cursor: pointer;
  opacity: .1;
  fill: white;
}

.marker-vertex-group:hover .marker-vertex-remove {
  opacity: 1;
}

.marker-vertex-remove-area {
  opacity: .1;
  cursor: pointer;
}
.marker-vertex-group:hover .marker-vertex-remove-area {
  opacity: 1;
}

/* Cell highlighting - e.g a cell underneath the dragged link get highlighted.
   See joint.dia.cell.js highlight(); */
.highlighted {
  opacity: 0.7;
}

/* For some reason, CSS `outline` property
   does not work on `<text>` elements. */
text.highlighted {
  fill: #FF0000;
}

/* `outline` doesn't work in Firefox, Opera and IE9+.
   The only engine supporting outlines on SVG elements is Webkit. */
@media screen and (-webkit-min-device-pixel-ratio:0) {
  .highlighted {
    outline: 2px solid #FF0000;
    opacity: initial;
  }
}

/*
Example of custom changes (in pure CSS only!):

Do not show marker vertices at all:  .marker-vertices { display: none; }
Do not allow adding new vertices: .connection-wrap { pointer-events: none; }
*/

/* foreignObject inside the elements (i.e joint.shapes.basic.TextBlock) */
.element .fobj body {
  background-color: transparent;
  margin: 0px;
}
.element .fobj div {
  text-align: center;
  vertical-align: middle;
  display: table-cell;
  padding: 0px 5px 0px 5px;
}
